# get daily vessel counts per weekday: total, inside, inside_small, maneuver, maneuver_small
summarise(Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE)) |>
mutate(Inside_transit = Total_inside - Inside_maneuver,
Inside_transit_small = Total_inside_small - Inside_maneuver_small,
Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")),
network = case_when(npz_id == "CGMP" | npz_id == "SIMP" ~ "Temperate East",
npz_id == "DMP" | npz_id == "NMP" ~ "Northwest", TRUE ~ "South-west"
),
network = factor(network, levels = c("Temperate East","Northwest","South-west")))
levels(all_ves_wkdy$Weekday) <- c("M","T","W","Th","F","Sa","Su")
# Weekly mean-adjusted counts for total vessels
wkly_mean_adj_tot <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence for days with presence
mutate(mean_tot = mean(Total_ves_dep, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
tot_wkdy_adj = Total_ves_dep - mean_tot)
# summarize mean & SD for plots
wkly_means_tot <- wkly_mean_adj_tot |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_wkdy_adj = mean(tot_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(sd_lower = mean_wkdy_adj - 0.5*(sd(mean_wkdy_adj)),
sd_upper = mean_wkdy_adj + 0.5*(sd(mean_wkdy_adj)))
# Weekly mean-adjusted counts, inside vessels
wkly_mean_adj_ins <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_inside, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence inside
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence inside for days with presence inside
mutate(mean_tot = mean(Total_inside, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
tot_wkdy_adj = Total_inside - mean_tot)
wkly_means_ins <- wkly_mean_adj_ins |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_wkdy_adj = mean(tot_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(sd_lower = mean_wkdy_adj - 0.5*(sd(mean_wkdy_adj)),
sd_upper = mean_wkdy_adj + 0.5*(sd(mean_wkdy_adj)))
# Weekly mean-adjusted counts, maneuvers
wkly_mean_adj_ins_man <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Inside_maneuver, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence of maneuvers
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence for days with presence of maneuvers
mutate(mean_man = mean(Inside_maneuver, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
man_wkdy_adj = Inside_maneuver - mean_man)
wkly_means_ins_man <- wkly_mean_adj_ins_man |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_man_wkdy_adj = mean(man_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(man_sd_lower = mean_man_wkdy_adj - 0.5*(sd(mean_man_wkdy_adj)),
man_sd_upper = mean_man_wkdy_adj + 0.5*(sd(mean_man_wkdy_adj)))
write_csv(all_ves_wkdy,
file = "output/All_ves_by_weekday.csv")
ves_weekday <- read_csv("output/All_ves_by_weekday.csv")
ves_weekday <- read_csv("output/All_ves_by_weekday.csv") |>
mutate("Weekday_fac" = as_factor(Weekday),
"Weekday_fac" = fct_relevel(Weekday_fac, c("Sunday","Monday","Tuesday","Wednesday",
"Thursday","Friday","Saturday")),
npz_dep = as_factor(paste0(npz_id, Dep_ID)))
View(ves_weekday)
unique(ves_weekday$Weekday)
ves_weekday <- read_csv("output/All_ves_by_weekday.csv") |>
mutate("Weekday_fac" = as_factor(Weekday),
"Weekday_fac" = fct_relevel(Weekday_fac, c("Su","M","Tu","W",
"Th","F","Sa")),
npz_dep = as_factor(paste0(npz_id, Dep_ID)))
ves_weekday <- read_csv("output/All_ves_by_weekday.csv") |>
mutate("Weekday_fac" = as_factor(Weekday),
"Weekday_fac" = fct_relevel(Weekday_fac, c("Su","M","T","W",
"Th","F","Sa")),
npz_dep = as_factor(paste0(npz_id, Dep_ID)))
ves_weekday <- read_csv("output/All_ves_by_weekday.csv") |>
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy)|>
mutate("Weekday_fac" = as_factor(Weekday),
"Weekday_fac" = fct_relevel(Weekday_fac, c("Su","M","T","W",
"Th","F","Sa")),
npz_dep = as_factor(paste0(npz_id, Dep_ID)))
ves_weekday <- read_csv("output/All_ves_by_weekday.csv") |>
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence
filter(n_days == 7,
week_sum > 0)
View(ves_weekday)
ves_weekday_og <- read_csv("output/All_ves_by_weekday.csv")
all_ves_wkdy <- read_csv("output/All_ves_by_weekday.csv")
ves_weekday <- all_ves_wkdy |>
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy)|>
mutate("Weekday_fac" = as_factor(Weekday),
"Weekday_fac" = fct_relevel(Weekday_fac, c("Su","M","T","W",
"Th","F","Sa")),
npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = poisson(link = "log"),
data = ves_weekday)
summary(ves_weekday_glm)
check_model(ves_weekday_glm)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
# family = poisson(link = "log"),
data = ves_weekday)
check_model(ves_weekday_glm)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = binomial(link = "log"),
data = ves_weekday)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = binomial(link = "logit"),
data = ves_weekday)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = poisson(link = "logit"),
data = ves_weekday)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = poisson(link = "log"),
data = ves_weekday)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac+npz_dep,
family = poisson(link = "log"),
data = ves_weekday)
summary(ves_weekday_glm)
check_model(ves_weekday_glm)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = poisson(link = "log"),
data = ves_weekday)
summary(ves_weekday_glm)
ves_weekday_glmm <- glmmTMB::glmmTMB(Total_ves_dep ~ Weekday_fac*npz_dep +
(1|network),
family = poisson(link = "log"),
data = ves_weekday)
summary(ves_weekday_glmm)
?kruskal.test
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
kw_cgmp201807 <- kruskal.test(formula = tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
View(wkly_mean_adj_tot)
kw_cgmp201807 <- kruskal.test(formula = Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
summary(kw_cgmp201807)
kw_cgmp201807 <- kruskal.test(x = tot_wkdy_adj,
g = Weekday,
data = wkly_mean_adj_tot)
kw_cgmp201807 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot)
summary(kw_cgmp201807)
head(wkly_mean_adj_tot)
kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot)
kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
kw_cgmp201807 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
kw_cgmp201904 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
kw_cgmp201807 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
kw_cgmp201904 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
# effect of weekday on total vessels
ves_weekday_glm <- glm(Total_ves_dep ~ Weekday_fac*npz_dep,
family = poisson(link = "log"),
data = ves_weekday)
summary(ves_weekday_glm)
check_model(ves_weekday_glm)
kw_cgmp201807 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
kw_cgmp201904 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |> filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
kw_cgmp201807
summary(kw_cgmp201807)
kw_cgmp201812 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
tidy(kw_cgmp201812)
wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812")
wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201904")
wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201807")
# CGMP 201812
kw_cgmp201812 <- aov(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
summary(kw_cgmp201812)
tidy(kw_cgmp201812)
# CGMP 201812
kw_cgmp201812 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
tidy(kw_cgmp201812)
breakvals_trans <- seq(-100,50,25)
ggplot(data = all_ves_long |>
filter(Ves_behav == "Inside_transit" |
Ves_behav == "Inside_maneuver",
npz_id != "SWCMP",
npz_id != "MMP")) +
geom_col(aes(x = npz_id,
y = ves_counts_diverge,
alpha = Ves_behav,
fill = network),
position = position_stack(),
show.legend = FALSE) +
# geom_col_pattern(aes(x = npz_id,
#          y = ves_counts_diverge),
#          position = position_stack(),
#                  pattern_density = 0.1,
#   fill = NA,
#   pattern_fill = "black",
#   pattern_colour = NA,
#   show.legend = FALSE)+
coord_flip()+
scale_y_continuous(limits = c(-75, 50),
breaks = breakvals_trans,
labels = abs(breakvals_trans))+
scale_fill_manual(values = c("Temperate East" = "#00AB8E",
"Northwest" = "#A05EB5",
"South-west" = "#485CC7"))+
scale_alpha_manual(values = c(0.9, 0.3), labels = c("Maneuver","Transit"))+
labs(y = "N vessels",
alpha = "Vessel Behavior",
title = "",
fill = NULL) +
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y",
switch = "y") +
theme(
axis.text.x = element_text(face = "bold"),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
?fisher.test
View(all_ves_long)
unique(all_ves_long$Ves_behav)
inout_freq_table <- all_ves_long |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside")
View(inout_freq_table)
####
# Diverging bar plot - NPZ (with colors!)
####
breakvals <- seq(-200, 800, 200)
ggplot() +
geom_col(data = all_ves_long |>
filter(Ves_behav == "total_outside",
npz_id != "SWCMP"),
aes(x = npz_id,
y = ves_counts_diverge),
position = position_stack(reverse = TRUE),
fill = "grey75",
show.legend = FALSE
)+
geom_col(data = all_ves_long |>
filter(Ves_behav == "Total_inside",
npz_id != "SWCMP"),
aes(x = npz_id,
y = ves_counts_diverge,
fill = network),
position = position_stack(reverse = TRUE),
# pattern_key_scale_factor = 1.3,
# pattern = "circle",
# pattern_density = 0.05,
# fill = "grey80",
# pattern_fill = "black",
# pattern_colour = NA,
show.legend = FALSE
) +
guides(fill = "none", alpha = "none")+ # take away fill legend but keep alpha legend
coord_flip()+
scale_y_continuous(limits = c(-200, 800),
breaks = breakvals,
labels = abs(breakvals))+
scale_fill_manual(values = c("Temperate East" = "#00AB8E",
"Northwest" = "#A05EB5",
"South-west" = "#485CC7"))+
# scale_pattern_fill_manual(values = c("Temperate East" = "#00AB8E",
#                            "Northwest" = "#A05EB5",
#                            "South-west" = "#485CC7"))+
# scale_color_manual(values = c("Temperate East" = "#00AB8E",
#                            "Northwest" = "#A05EB5",
#                            "South-west" = "#485CC7"))+
scale_alpha_manual(values = c(0.9,0.4),
labels = c("Inside" , "Outside"))+
labs(y = "N vessels",
# alpha = "Estimated vessel location",
title = "",
fill = NULL) +
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y",
switch = "y") +
theme(
axis.text.x = element_text(face = "bold"),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
group_by(npz_dep) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
summarise(sum(Ves_behav))
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
group_by(npz_dep) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
summarise(total = sum(Ves_behav))
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts))
View(inout_freq_table)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
table()
inout_freq_table
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
tally()
View(inout_freq_table)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts))
View(inout_freq_table)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(cols=Ves_behav)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav)
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)
fisher.test(inout_freq_table)
fisher.test(inout_freq_table[2:3])
chisq.test(inout_freq_table[2:3])
inout_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)
chisq.test(inout_freq_network[2:3])
View(inout_freq_network)
# test across networks
inout_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total) |>
mutate(prop_inside = total_inside/total_outside)
# test across networks
inout_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total) |>
mutate(prop_inside = Total_inside/total_outside)
chisq.test(inout_freq_network[2:3])
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Total_inside/total_outside)
chisq.test(inout_freq_table[2:3])
fisher.test(inout_freq_table[2:3], simulate.p.value = TRUE)
fisher.test(inout_freq_network[2:3])
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_network[2:3])
