# justification = -0.2, # move to the right
# .width = 0 # remove slab interval
)+
# add skinny boxplot
geom_boxplot(width = 0.15,
alpha = 0.3,
outlier.colour = NA)+
# add rain to raincloud
ggdist::stat_dots(
aes(fill = network),
# point to the left
side = "left",
# move to the left
justification = 1.1,
binwidth = 0.1,
layout = "hex",
overflow = "compress") +
facet_grid(rows = vars(network),
scales = "free_y") +
theme_bw()
all_sites_hp <- read_csv("data_inputs/All_sites_tables/hourly_pres_allsites_local.csv")
all_sites_in-out <- read_csv("data_inputs/All_sites_tables/total_ves_ins_out_by_site.csv")
all_sites_inout <- read_csv("data_inputs/All_sites_tables/total_ves_ins_out_by_site.csv")
# NOAA-approved tidyverse
tidyverse_short<-c("broom","cli","crayon","dbplyr","dplyr","dtplyr","forcats","ggplot2","googledrive","googlesheets4","hms","httr","jsonlite","lubridate","magrittr","modelr","pillar","purrr","readr","readxl","reprex","rlang","rstudioapi","rvest","stringr","tibble","tidyr","xml2")
lapply(tidyverse_short, require, character.only = TRUE)
library(scales)
library(ggalt)
library(ggsci)
# source helper file
source("scripts/AMP_summary_ves_funs.R")
#### Load compiled hourly presence table ####
# This is generated using Reformat_data_for_HP script
all_sites_hp <- read_csv("data_inputs/All_sites_tables/hourly_pres_allsites_local.csv")
all_sites_inout <- read_csv("data_inputs/All_sites_tables/total_ves_ins_out_by_site.csv")
View(all_sites_inout)
all_sites_hp <- all_sites_hp |>
mutate(
# replace NA's with 0's to accurately incorporate hours with presence = 0
Total_Vessels = replace_na(Total_Vessels, 0),
total_inside = replace_na(total_inside, 0),
# add categorical Y/N column for vessels present to calculate proportions
ves_yn = ifelse(Total_Vessels == 0, "N","Y"),
ins_ves_yn = ifelse(total_inside == 0, "N","Y"),
# add date without year to collapse across years
Month = month(Begin_Date_loc),
Day_month = mday(Begin_Date_loc),
Date_noyr = as_date(paste0(Month, "-", Day_month), format = "%m-%d"),
# add network for grouping/faceting later
network = case_when(SiteID == "CGMP" | SiteID == "SIMP_EP" | SiteID == "SIMP_WP" ~ "Temperate East",
SiteID == "DNE" | SiteID == "DSW" | SiteID == "NGN"| SiteID == "NGS" ~ "Northwest",
TRUE ~ "South-west"
))
# Plot: x-axis = sites, y-axis = totals (single value)
#
# count up total vessels and vessels inside parks
all_ves_by_site <- all_sites_hp |>
group_by(network, SiteID) |>
summarise(n_days = n_distinct(Begin_Date_loc),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_ves_per_day = Total_ves_dep/n_days,
Total_inside_ves_dep = sum(total_inside, na.rm = TRUE),
Total_inside_ves_per_day = Total_inside_ves_dep/n_days) #|>
# Total vessels
#
# Plot: x-axis = sites, y-axis = proportion hours with vessel present (single value)
#
# Proportion presence for total deployment
all_ves_prop_hrs <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
View(all_ves_by_site)
# Plot: x-axis = sites, y-axis = totals (single value)
#
# count up total vessels and vessels inside parks
all_ves_by_site <- all_sites_hp |>
group_by(network, SiteID) |>
summarise(n_days = n_distinct(Begin_Date_loc),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
# Total_ves_per_day = Total_ves_dep/n_days,
Total_inside_ves_dep = sum(total_inside, na.rm = TRUE))
all_ves_prop_hrs <- all_sites_hp |>
# group by y/n column
group_by(network, SiteID, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
View(all_ves_prop_hrs)
# Vessels inside parks -- N hours with vessel inside park out of N deployment hours
ins_ves_prop_hrs <- all_sites_hp |>
# group by y/n column to collapse into hours
group_by(network, SiteID, ins_ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ins_ves_yn,
fill = list(ins_ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ins_ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
# Proportion of 'vessel hours' with inside vessels over whole deployment
# Plot: x-axis = site, y-axis = proportion of total vessel hours with inside vessels (single value)
ins_ves_prop_allves <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, ves_yn, ins_ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ins_ves_yn,
fill = list(ins_ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ins_ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
# Proportion of 'vessel hours' with inside vessels over whole deployment
# Plot: x-axis = site, y-axis = proportion of total vessel hours with inside vessels (single value)
ins_ves_prop_allves <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, ves_yn, ins_ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ins_ves_yn,
fill = list(ins_ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ins_ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
View(ins_ves_prop_allves)
which(all_sites_hp$total_inside == 0 & all_sites_hp$Total_Vessels > 0)
which(all_sites_hp$total_inside > 0 & all_sites_hp$Total_Vessels == 0)
to_check <- which(all_sites_hp$total_inside > 0 & all_sites_hp$Total_Vessels == 0)
all_sites_hp[to_check, ]
ves_to_check <- all_sites_hp[to_check, ]
View(ves_to_check)
View(ves_to_check)
write_csv(ves_to_check, file = "data_outputs/ves_to_check.csv")
all_sites_hp <- read_csv("data_inputs/All_sites_tables/hourly_pres_allsites_local.csv")
all_sites_inout <- read_csv("data_inputs/All_sites_tables/total_ves_ins_out_by_site.csv")
View(all_sites_hp)
all_diel_perc <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, Begin_Hour_loc, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, Begin_Hour_loc, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, Begin_Hour_loc, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
all_sites_hp <- all_sites_hp |>
mutate(
# replace NA's with 0's to accurately incorporate hours with presence = 0
Total_Vessels = replace_na(Total_Vessels, 0),
total_inside = replace_na(total_inside, 0),
# add categorical Y/N column for vessels present to calculate proportions
ves_yn = ifelse(Total_Vessels == 0, "N","Y"),
ins_ves_yn = ifelse(total_inside == 0, "N","Y"),
# add date without year to collapse across years
Month = month(Begin_Date_loc),
Day_month = mday(Begin_Date_loc),
Date_noyr = as_date(paste0(Month, "-", Day_month), format = "%m-%d"),
# add network for grouping/faceting later
network = case_when(SiteID == "CGMP" | SiteID == "SIMP_EP" | SiteID == "SIMP_WP" ~ "Temperate East",
SiteID == "DNE" | SiteID == "DSW" | SiteID == "NGN"| SiteID == "NGS" ~ "Northwest",
TRUE ~ "South-west"
))
all_diel_perc <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, Begin_Hour_loc, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, Begin_Hour_loc, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, Begin_Hour_loc, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
View(all_diel_perc)
# of hours with acoustically detected vessels, __% had presence inside the park
ins_diel_perc <- all_sites_hp |>
# group by Begin Hour to collapse into hours
group_by(network, SiteID, Begin_Hour_loc, ves_yn, ins_ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, ins_ves_yn,
fill = list(ins_ves_yn = "Y", freq = 0)) |>
group_by(SiteID, ins_ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
# Plot: x-axis = weekday, y-axis = median +/- 25th - 75th percentiles (single value)
#
# count up total vessels and vessels inside parks
all_ves_by_weekday <- all_sites_hp |>
group_by(network, SiteID, Date_noyr, Weekday) |>
summarise(n_days = n_distinct(Date_noyr),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_ves_per_day = Total_ves_dep/n_days,
Total_inside_ves_dep = sum(total_inside, na.rm = TRUE),
Total_inside_ves_per_day = Total_inside_ves_dep/n_days) |>
mutate(Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")))
levels(all_ves_by_weekday$Weekday) <- c("M","T","W","R","F","Sa","Su")
weekday_summary <- all_ves_by_weekday |>
group_by(network, SiteID, Weekday) |>
summarise(total_weekday = sum(Total_ves_dep),
median_ves_weekday = median(Total_ves_dep),
weekday_lower = quantile(Total_ves_dep, 0.25),
weekday_upper = quantile(Total_ves_dep, 0.75),
total_ins_weekday = sum(Total_inside_ves_dep),
median_ins_ves_weekday = median(Total_inside_ves_dep),
weekday_ins_lower = quantile(Total_inside_ves_dep, 0.25),
weekday_ins_upper = quantile(Total_inside_ves_dep, 0.75)) |>
mutate(Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")))
levels(weekday_summary$Weekday) <- c("M","T","W","R","F","Sa","Su")
all_perc_weekday <- all_sites_hp |>
# group by date
group_by(network, SiteID, Date_noyr, Weekday, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, Weekday, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, Weekday, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
weekly_ves <- all_sites_hp |>
mutate(iso_week = isoweek(Begin_Date_loc)) |>
group_by(network, SiteID, iso_week) |>
summarize(mean_ves = mean(Total_Vessels, na.rm = TRUE),
med_ves = median(Total_Vessels, na.rm = TRUE),
sd_ves = sd(Total_Vessels, na.rm = TRUE),
sd_lower = mean_ves - (0.5*sd_ves),
sd_upper = mean_ves + (0.5*sd_ves))
# total vessels & summary stats per day
daily_ves <- all_sites_hp |>
group_by(network, SiteID, Date_noyr) |>
summarize(mean_ves = mean(Total_Vessels, na.rm = TRUE),
med_ves = median(Total_Vessels, na.rm = TRUE),
sd_ves = sd(Total_Vessels, na.rm = TRUE),
sd_lower = mean_ves - (0.5*sd_ves),
sd_upper = mean_ves + (0.5*sd_ves))
View(all_perc_weekday)
all_perc_weekday <- all_sites_hp |>
# group by date
group_by(network, SiteID, Weekday, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, Weekday, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, Weekday, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
View(all_perc_weekday)
View(weekday_summary)
weekday_summary <- all_ves_by_weekday |>
group_by(network, SiteID, Weekday) |>
summarise(total_weekday = sum(Total_ves_dep),
median_ves_weekday = median(Total_ves_dep),
weekday_lower = quantile(Total_ves_dep, 0.25),
weekday_upper = quantile(Total_ves_dep, 0.75),
total_ins_weekday = sum(Total_inside_ves_dep),
median_ins_ves_weekday = median(Total_inside_ves_dep),
weekday_ins_lower = quantile(Total_inside_ves_dep, 0.25),
weekday_ins_upper = quantile(Total_inside_ves_dep, 0.75)) |>
mutate(Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")))
levels(weekday_summary$Weekday) <- c("M","T","W","R","F","Sa","Su")
View(weekday_summary)
View(weekday_summary)
weekday_summary <- all_ves_by_weekday |>
group_by(network, SiteID, Weekday) |>
summarise(total_weekday = sum(Total_ves_dep),
median_ves_weekday = median(Total_ves_dep),
weekday_lower = quantile(Total_ves_dep, 0.25),
weekday_upper = quantile(Total_ves_dep, 0.75),
total_ins_weekday = sum(Total_inside_ves_dep),
median_ins_ves_weekday = median(Total_inside_ves_dep),
weekday_ins_lower = quantile(Total_inside_ves_dep, 0.25),
weekday_ins_upper = quantile(Total_inside_ves_dep, 0.75)) |>
mutate(Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")))
View(weekday_summary)
weekday_summary <- all_ves_by_weekday |>
group_by(network, SiteID, Weekday) |>
summarise(total_weekday = sum(Total_ves_dep),
median_ves_weekday = median(Total_ves_dep),
weekday_lower = quantile(Total_ves_dep, 0.25),
weekday_upper = quantile(Total_ves_dep, 0.75),
total_ins_weekday = sum(Total_inside_ves_dep),
median_ins_ves_weekday = median(Total_inside_ves_dep),
weekday_ins_lower = quantile(Total_inside_ves_dep, 0.25),
weekday_ins_upper = quantile(Total_inside_ves_dep, 0.75)) |>
mutate(Weekday = factor(Weekday, levels=c("M","T","W","R","F","Sa","Su")))
View(weekday_summary)
weekday_summary <- all_ves_by_weekday |>
group_by(network, SiteID, Weekday) |>
summarise(total_weekday = sum(Total_ves_dep),
median_ves_weekday = median(Total_ves_dep),
weekday_lower = quantile(Total_ves_dep, 0.25),
weekday_upper = quantile(Total_ves_dep, 0.75),
total_ins_weekday = sum(Total_inside_ves_dep),
median_ins_ves_weekday = median(Total_inside_ves_dep),
weekday_ins_lower = quantile(Total_inside_ves_dep, 0.25),
weekday_ins_upper = quantile(Total_inside_ves_dep, 0.75)) |>
mutate(Weekday = factor(Weekday, levels=c("M","T","W","R","F","Sa","Su")))
all_perc_weekday <- all_sites_hp |>
# group by date
group_by(network, SiteID, Weekday, ves_yn) |>
# get total number of hours for Y and N groups per each hour per deployment
summarize(n_hours = n())|>
mutate(freq = n_hours/sum(n_hours)) |>
ungroup() |>
complete(SiteID, Weekday, ves_yn,
fill = list(ves_yn = "Y", freq = 0)) |>
group_by(SiteID, Weekday, ves_yn) |>
# reshape for easier plotting
pivot_longer(cols = c("freq"),
values_to = "Perc_per_hour")
# total vessels per week
weekly_ves <- all_sites_hp |>
mutate(iso_week = isoweek(Begin_Date_loc)) |>
group_by(network, SiteID, iso_week) |>
summarize(mean_ves = mean(Total_Vessels, na.rm = TRUE),
med_ves = median(Total_Vessels, na.rm = TRUE),
sd_ves = sd(Total_Vessels, na.rm = TRUE),
sd_lower = mean_ves - (0.5*sd_ves),
sd_upper = mean_ves + (0.5*sd_ves))
# total vessels & summary stats per day
daily_ves <- all_sites_hp |>
group_by(network, SiteID, Date_noyr) |>
summarize(mean_ves = mean(Total_Vessels, na.rm = TRUE),
med_ves = median(Total_Vessels, na.rm = TRUE),
sd_ves = sd(Total_Vessels, na.rm = TRUE),
sd_lower = mean_ves - (0.5*sd_ves),
sd_upper = mean_ves + (0.5*sd_ves))
# test plot to check whether weekday ordering worked
ggplot(data = weekday_summary,
mapping = aes(x = Weekday,
y = median_ves_weekday)) +
geom_col() +
geom_linerange(aes(ymin = weekday_lower,
ymax = weekday_upper))+
facet_wrap(~SiteID) +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = weekday_summary,
mapping = aes(x = Weekday,
y = median_ves_weekday)) +
geom_boxplot() +
facet_wrap(~SiteID) +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = weekday_summary,
mapping = aes(x = Weekday,
y = median_ves_weekday)) +
geom_col() +
geom_linerange(aes(ymin = weekday_lower,
ymax = weekday_upper))+
facet_wrap(~SiteID) +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep)) +
geom_boxplot()+
facet_wrap(~SiteID, scales = "free_y") +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep, color = network)) +
geom_boxplot()+
facet_wrap(~SiteID, scales = "free_y") +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep, color = network)) +
geom_boxplot()+
facet_wrap(~c(network,SiteID), scales = "free_y") +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep, color = network)) +
geom_boxplot()+
facet_wrap(~c(network), scales = "free_y") +
theme_bw()
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep, color = network)) +
geom_boxplot()+
facet_wrap(~c(network)) +
theme_bw()
ggsave("Figures/weekday_by_network_boxplot.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
library(ggdist)
# start with boxplot
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_ves_dep,
color = network)) +
# add half violin to plot alongside boxplot
ggdist::stat_halfeye(aes(fill = network),
alpha = 0.5,
width = 0.4, # adjust height
# justification = -0.2, # move to the right
# .width = 0 # remove slab interval
)+
# add skinny boxplot
geom_boxplot(width = 0.15,
alpha = 0.3,
outlier.colour = NA)+
# add rain to raincloud
ggdist::stat_dots(
aes(fill = network),
# point to the left
side = "left",
# move to the left
justification = 1.1,
binwidth = 0.1,
layout = "hex",
overflow = "compress") +
facet_grid(rows = vars(network),
scales = "free_y") +
theme_bw()
ggsave("Figures/weekday_by_network_raincloud.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
### Weekday inside
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_inside_ves_per_day)) +
geom_boxplot() +
# geom_linerange(aes(ymin = weekday_ins_lower,
#                    ymax = weekday_ins_upper))+
facet_wrap(~SiteID) +
theme_bw()
### Weekday inside
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_inside_ves_per_day)) +
geom_boxplot() +
# geom_linerange(aes(ymin = weekday_ins_lower,
#                    ymax = weekday_ins_upper))+
facet_wrap(~network) +
theme_bw()
### Weekday inside
# test plot to check whether weekday ordering worked
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_inside_ves_per_day)) +
geom_boxplot() +
# geom_linerange(aes(ymin = weekday_ins_lower,
#                    ymax = weekday_ins_upper))+
facet_wrap(~SiteID) +
theme_bw()
# Save figure
ggsave("Figures/inside_weekday_by_site_boxplot.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
# Save figure
ggsave("Figures/inside_weekday_by_network_boxplot.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
# Save figure
ggsave("Figures/inside_weekday_by_site_boxplot.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
# By site
ggplot(data = all_ves_by_weekday,
mapping = aes(x = Weekday,
y = Total_inside_ves_per_day)) +
geom_boxplot() +
# geom_linerange(aes(ymin = weekday_ins_lower,
#                    ymax = weekday_ins_upper))+
facet_wrap(~network) +
theme_bw()
# Save figure
ggsave("Figures/inside_weekday_by_network_boxplot.jpg", device = "jpeg",
width=10, height=8, units="in", dpi=300)
