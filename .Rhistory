fill = ifelse(sd_lower >= 0, 'over',
ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE
)+
#translucent bar for total vessels
geom_col(data = wkly_means_tot |>
filter(network == "South-west"),
aes(x = Weekday,
y = mean_wkdy_adj,
# conditional fill based on lower SD value
# "if mean +/- SD is above 0, 'over'
# fill = ifelse(sd_lower >= 0, 'over',
#               ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE,
alpha = 0.15,
fill = "grey50"
)+
# assign specific colors to values over/under mean
scale_fill_manual(values = c("over" = "deepskyblue3",
"under" = "orange",
"center" = "grey50"))+
labs(y = "",
x = "Weekday")+
facet_nested(rows = vars(npz_id, Dep_ID),
# cols = vars(network),
nest_line = element_line(),
scales = "free_y") +
theme(
axis.text.x = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold"),
plot.margin = margin(t = 20, r = 5.5, b = 93)
)
ggarrange(wkdy_plot_tempeast, wkdy_plot_northwest, wkdy_plot_southwest,
nrow = 1,
labels = c("Temperate East","Northwest","South-west"),
vjust=1.25)
ggsave(paste0("figs/", "Weekday_mean_adj_horiz_panels_allbars_free_y.png"), width=12, height=8, units="in", dpi=300)
View(tukey_light_inside)
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot)
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |> filter(network == "Temperate East"))
pairwise.wilcox.test(light_mean_adj_tot$tot_light_adj, light_mean_adj_tot$light_reg, p.adjust.method = "BH")
kw_by_network <- light_mean_adj_tot |>
group_by(network) |>
summarize(kw_test = kruskal.test(tot_light_adj ~ light_reg, data = .))
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "North-west"))
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Northwest"))
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "South-west"))
install.packages("FSA")
library(FSA)
?dunnTest.formula
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Temperate East"),
method = "holm")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_id == "SIMP"))
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_id == "SIMP"),
method = "holm")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_dep == "SIMP"))
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_dep == "SIMP201906"))
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_dep == "SIMP201906"),
method = "holm")
View(light_mean_adj_tot)
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(npz_dep == "SIMP201906"),
method = "holm") |> plot()
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Temperate East"))
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Temperate East"),
method = "holm")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Northwest"))
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "Northwest"),
method = "holm")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "South-west"))
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot |>
filter(network == "South-west"),
method = "holm")
install.packages("ARTool")
library(ARTool)
total_art <- art(tot_light_adj ~ light_reg*npz_dep,
data = light_mean_adj_tot)
total_art <- art(tot_light_adj ~ as_factor(light_reg)*npz_dep,
data = light_mean_adj_tot)
total_art <- art(tot_light_adj ~ factor(light_reg)*npz_dep,
data = light_mean_adj_tot)
total_art <- art(tot_light_adj ~ factor(light_reg) + npz_dep + factor(light_reg):npz_dep,
data = light_mean_adj_tot)
light_mean_adj_tot <- light_mean_adj_tot |>
mutate(npz_dep = paste0(npz_id, Dep_ID),
light_reg = as_factor(light_reg))
light_mean_adj_tot <- light_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)),
light_reg = as_factor(light_reg))
total_art <- art(tot_light_adj ~ light_reg + npz_dep + light_reg:npz_dep,
data = light_mean_adj_tot)
total_art
anova(total_art)
art.con(total_art)
art.con(total_art, "light_reg:npz_dep")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot))
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_tot)
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_tot,
method = "holm")
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_ins)
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_ins,
method = "holm")
# maneuvers
kruskal.test(tot_light_adj ~ light_reg,
data = light_mean_adj_man)
dunnTest(tot_light_adj ~ light_reg,
data = light_mean_adj_man,
method = "holm")
4.047404e-01
shapiro.test(daily_means_tot$mean_diel_adj)
?Tukey
?TukeyHSD
# Calculate daily mean-adjusted counts per hour
daily_mean_adj_tot <- all_ves_diel |>
# group to date level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# get n_hours per day
summarize(n_hrs = n(),
# and total vessels per day
day_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full days n_hrs == 24
# and days with vessels present
filter(n_hrs == 24,
day_sum >0) |>
# join to get hourly counts back
left_join(all_ves_diel) |>
# re-group to daily level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# calculate mean total presence per day with vessels
mutate(mean_tot = mean(Total_ves_dep, na.rm = TRUE),
# calculate mean-adjusted counts per hour
tot_diel_adj = Total_ves_dep - mean_tot)
daily_means_tot <- daily_mean_adj_tot |>
# group to hour level per deployment
group_by(network, npz_id, Dep_ID, Begin_Hour_loc) |>
# get mean of mean-adjusted ounts per hour
summarise(mean_diel_adj = mean(tot_diel_adj, na.rm =TRUE)) |>
# get lower & upper bounds for SD around mean of adjusted counts
mutate(sd_lower = mean_diel_adj - 0.5*(sd(mean_diel_adj)),
sd_upper = mean_diel_adj + 0.5*(sd(mean_diel_adj)))
# Calculate daily mean-adjusted counts per hour for inside vessels
daily_mean_adj_ins <- all_ves_diel |>
# group to date level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# get n_hours per day
summarize(n_hrs = n(),
# and total vessels per day
day_sum = sum(Total_inside, na.rm = TRUE)) |>
# only keep full days n_hrs == 24
# and days with vessels present
filter(n_hrs == 24,
day_sum > 0) |>
# join to get hourly counts back
left_join(all_ves_diel) |>
# re-group to daily level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# calculate mean total presence per day with vessels
mutate(mean_ins = mean(Total_inside, na.rm = TRUE),
# calculate mean-adjusted counts per hour
ins_diel_adj = Total_inside - mean_ins)
daily_means_ins <- daily_mean_adj_ins |>
# group to hour level per deployment
group_by(network, npz_id, Dep_ID, Begin_Hour_loc) |>
# get mean of mean-adjusted ounts per hour
summarise(mean_diel_adj = mean(ins_diel_adj, na.rm =TRUE)) |>
# get lower & upper bounds for SD around mean of adjusted counts
mutate(sd_lower = mean_diel_adj - 0.5*(sd(mean_diel_adj)),
sd_upper = mean_diel_adj + 0.5*(sd(mean_diel_adj)))
daily_mean_adj_ins_man <- all_ves_diel |>
# group to date level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# get n_hours per day
summarize(n_hrs = n(),
# and total vessels per day
day_sum = sum(Inside_maneuver, na.rm = TRUE)) |>
# only keep full days n_hrs == 24
# and days with vessels present
filter(n_hrs == 24,
day_sum > 0) |>
# join to get hourly counts back
left_join(all_ves_diel) |>
# re-group to daily level
group_by(network, npz_id, Dep_ID, Dep, Begin_Date_loc) |>
# calculate mean total presence per day with vessels
mutate(mean_ins_man = mean(Inside_maneuver, na.rm = TRUE),
# calculate mean-adjusted counts per hour
ins_diel_man_adj = Inside_maneuver - mean_ins_man)
daily_means_ins_man <- daily_mean_adj_ins_man |>
# group to hour level per deployment
group_by(network, npz_id, Dep_ID, Begin_Hour_loc) |>
# get mean of mean-adjusted ounts per hour
summarise(mean_diel_man_adj = mean(ins_diel_man_adj, na.rm =TRUE)) |>
# get lower & upper bounds for SD around mean of adjusted counts
mutate(sd_lower = mean_diel_man_adj - 0.5*(sd(mean_diel_man_adj)),
sd_upper = mean_diel_man_adj + 0.5*(sd(mean_diel_man_adj)))
shapiro.test(daily_mean_adj_tot$tot_diel_adj)
shapiro.test(daily_mean_adj_tot$tot_diel_adj)
aov(tot_diel_adj~Begin_hour_loc*npz_dep, data = daily_mean_adj_tot)
aov(tot_diel_adj~Begin_Hour_loc*npz_dep, data = daily_mean_adj_tot)
aov(tot_diel_adj~Begin_Hour_loc*npz_id, data = daily_mean_adj_tot)
summary(aov(tot_diel_adj~Begin_Hour_loc*npz_id, data = daily_mean_adj_tot))
check_normality(aov(tot_diel_adj~Begin_Hour_loc*npz_id, data = daily_mean_adj_tot))
qqplot(daily_mean_adj_tot$tot_diel_adj)
qqnorm(daily_mean_adj_tot$tot_diel_adj)
kruskal.test(tot_diel_adj~Begin_Hour_loc, data = daily_mean_adj_tot)
dunnTest(tot_diel_adj~Begin_Hour_loc, data = daily_mean_adj_tot, method = "holm")
dunnTest(tot_diel_adj~factor(Begin_Hour_loc), data = daily_mean_adj_tot, method = "holm")
dunnTest(tot_diel_adj~factor(Begin_Hour_loc), data = daily_mean_adj_tot, method = "holm") |> filter(P.adj < 0.05)
dunnTest(tot_diel_adj~factor(Begin_Hour_loc), data = daily_mean_adj_tot, method = "holm") |> tidy() |> filter(P.adj < 0.05)
summary(dunnTest(tot_diel_adj~factor(Begin_Hour_loc), data = daily_mean_adj_tot, method = "holm"))
hour_dunn <- dunnTest(tot_diel_adj~factor(Begin_Hour_loc), data = daily_mean_adj_tot, method = "holm")
print(hour_dunn, dunn.test.results = TRUE)
print(hour_dunn, dunn.test.results = TRUE)
print(hour_dunn, dunn.test.results = TRUE) |> tidy()
print(hour_dunn, dunn.test.results = TRUE)
print(hour_dunn, dunn.test.results = TRUE)
printed_dunn <- print(hour_dunn, dunn.test.results = TRUE)
as.data.frame(hour_dunn, dunn.test.results = TRUE)
View(hour_dunn)
as.data.frame(hour_dunn$res)
dunntable <- as.data.frame(hour_dunn$res)
View(dunntable)
dunntable <- as.data.frame(hour_dunn$res) |> filter(P.adj < 0.05)
24*24
?pairwise.fisher.test
fisher.test(inout_freq_table[2:3], simulate.p.value = TRUE)
inout_freq_table
# all vessels
kruskal.test(tot_diel_adj ~ Begin_Hour_loc,
data = daily_mean_adj_tot)
dunnTest(tot_diel_adj ~ Begin_Hour_loc,
data = daily_mean_adj_tot,
method = "holm")
# all vessels
kruskal.test(tot_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_tot)
dunnTest(tot_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_tot,
method = "holm")
dunn_hour_tot <- dunnTest(tot_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_tot,
method = "holm")
dunntable_tot <- as.data.frame(dunn_hour_tot$res)
# inside
kruskal.test(tot_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins)
# inside
kruskal.test(ins_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins)
# inside
kruskal.test(ins_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins)
dunn_hour_ins <- dunnTest(ins_diel_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins,
method = "holm")
dunntable_ins <- as.data.frame(dunn_hour_ins$res)
View(dunntable_ins)
kruskal.test(ins_diel_man_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins_man)
dunn_hour_man <- dunnTest(ins_diel_man_adj ~ factor(Begin_Hour_loc),
data = daily_mean_adj_ins_man,
method = "holm")
dunntable_man <- as.data.frame(dunn_hour_man$res)
View(dunntable_man)
ggplot(data = daily_means_tot,
aes(x = Begin_Hour_loc,
y = mean_diel_adj)) +
geom_hline(yintercept = 0,
linetype = 3, # dotted line
colour = "black") +
# linerange for inside error bars
geom_linerange(data = daily_means_ins,
aes(ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "black",
show.legend = FALSE) +
# bar for inside vessels
geom_col(data = daily_means_ins,
aes(x = Begin_Hour_loc,
y = mean_diel_adj,
# conditional fill based on lower SD value
# "if mean +/- SD is above 0, 'over'
fill = ifelse(sd_lower >= 0, 'over',
ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE
) +
#translucent bar for total vessels
geom_col(data = daily_means_tot,
aes(x = Begin_Hour_loc,
y = mean_diel_adj),
show.legend = FALSE,
alpha = 0.15,
fill = "grey50")+
# error bars for total vessels
geom_linerange(aes(ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "grey50",
# size = 0.1,
show.legend = FALSE) +
scale_fill_manual(values = c("over" = "deepskyblue",
"under" = "orange",
"center" = "grey75"))+
scale_x_continuous(breaks = seq(0,23,2))+
labs(y = "Mean-adjusted average N vessels / hour",
x = "Hour of Day (Local TZ)",
title = "")+
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y") +
theme(
axis.text.x = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
ggplot() +
geom_hline(yintercept = 0,
linetype = 3, # dotted line
colour = "black") +
# pointrange for inside vessels
# geom_pointrange(data = daily_means_ins,
#      aes(x = Begin_Hour_loc,
#          y = mean_diel_adj,
#          ymin = sd_lower,
#                     ymax = sd_upper,
#                     group = npz_id),
#                     color = "grey50",
#                 size = 0.1,
#                 show.legend = FALSE) +
#
# linerange for maneuver error bars
geom_linerange(data = daily_means_ins_man,
aes(x = Begin_Hour_loc,
ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "black",
show.legend = FALSE) +
# bar for maneuvering vessels
geom_col(data = daily_means_ins_man,
aes(x = Begin_Hour_loc,
y = mean_diel_man_adj,
# conditional fill based on lower SD value
# "if mean +/- SD is above 0, 'over'
fill = ifelse(sd_lower >= 0, 'over',
ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE
) +
scale_fill_manual(values = c("over" = "deepskyblue",
"under" = "orange",
"center" = "grey75"))+
scale_x_continuous(breaks = seq(0,23,2))+
scale_y_continuous(limits = c(-0.5,1.0))+
labs(y = "Mean-adjusted average N vessels / hour",
x = "Hour of Day (Local TZ)",
title = "")+
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y") +
theme(
axis.text.x = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
ggplot(data = daily_means_tot,
aes(x = Begin_Hour_loc,
y = mean_diel_adj)) +
geom_hline(yintercept = 0,
linetype = 3, # dotted line
colour = "black") +
# linerange for inside error bars
geom_linerange(data = daily_means_ins,
aes(ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "black",
show.legend = FALSE) +
# bar for inside vessels
geom_col(data = daily_means_ins,
aes(x = Begin_Hour_loc,
y = mean_diel_adj,
# conditional fill based on lower SD value
# "if mean +/- SD is above 0, 'over'
fill = ifelse(sd_lower >= 0, 'over',
ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE
) +
#translucent bar for total vessels
geom_col(data = daily_means_tot,
aes(x = Begin_Hour_loc,
y = mean_diel_adj),
show.legend = FALSE,
alpha = 0.15,
fill = "grey50")+
# error bars for total vessels
geom_linerange(aes(ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "grey50",
# size = 0.1,
show.legend = FALSE) +
scale_fill_manual(values = c("over" = "deepskyblue",
"under" = "orange",
"center" = "grey75"))+
scale_x_continuous(breaks = seq(0,23,2))+
labs(y = "Mean-adjusted average N vessels / hour",
x = "Hour of Day (Local TZ)",
title = "")+
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y") +
theme(
axis.text.x = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
ggsave(paste0("figs/", "Diel_mean_adj_combined_allbars_free_y.png"), width=8, height=12, units="in", dpi=300)
ggplot() +
geom_hline(yintercept = 0,
linetype = 3, # dotted line
colour = "black") +
# pointrange for inside vessels
# geom_pointrange(data = daily_means_ins,
#      aes(x = Begin_Hour_loc,
#          y = mean_diel_adj,
#          ymin = sd_lower,
#                     ymax = sd_upper,
#                     group = npz_id),
#                     color = "grey50",
#                 size = 0.1,
#                 show.legend = FALSE) +
#
# linerange for maneuver error bars
geom_linerange(data = daily_means_ins_man,
aes(x = Begin_Hour_loc,
ymin = sd_lower,
ymax = sd_upper,
group = npz_id),
color = "black",
show.legend = FALSE) +
# bar for maneuvering vessels
geom_col(data = daily_means_ins_man,
aes(x = Begin_Hour_loc,
y = mean_diel_man_adj,
# conditional fill based on lower SD value
# "if mean +/- SD is above 0, 'over'
fill = ifelse(sd_lower >= 0, 'over',
ifelse(sd_upper <=0, 'under', 'center'))
),
show.legend = FALSE
) +
scale_fill_manual(values = c("over" = "deepskyblue",
"under" = "orange",
"center" = "grey75"))+
scale_x_continuous(breaks = seq(0,23,2))+
scale_y_continuous(limits = c(-0.5,1.0))+
labs(y = "Mean-adjusted average N vessels / hour",
x = "Hour of Day (Local TZ)",
title = "")+
facet_nested(rows = vars(network, npz_id, Dep_ID),
nest_line = element_line(),
scales = "free_y") +
theme(
axis.text.x = element_text(face = "bold"),
strip.background = element_blank(),
strip.text.y = element_text(face = "bold")
)
ggsave(paste0("figs/", "Diel_mean_adj_bars_maneuvers_free_y.png"), width=8, height=12, units="in", dpi=300)
