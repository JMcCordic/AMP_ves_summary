#### Add some columns, update time zone ####
# making this to be able to add column names
new_cols <- c("Maneuver" = 0,"Transit" = 0, "Not_Assigned" = 0)
hp_allcols <- hp_og |>
# add columns for Transit and Maneuver if they don't exist
map(~add_column(., !!!new_cols[!names(new_cols) %in% names(.)])
)
# Hourly presence
hp_data <- hp_allcols |>
map(~rename(.,
any_of(c("TR" = "Transit",
"M" = "Maneuver",
"Dep" = "Dep_ID")))) |>
map(~relocate(.,
TR, .after = last_col())) |>
map(~relocate(.,
Not_Assigned, .after = last_col())) |>
map(~relocate(.,
M, .after = last_col())) |>
map2(.y = dep_info,
~mutate(.x,
Site_ID = {.y}$site_id,
Dep_ID = {.y}$dep_id,
Total_Vessels = rowSums(across(c(TR, M))),
# create y/n column for vessel presence
ves_yn = ifelse(Total_Vessels == 0, "N", "Y"),
# pull hour as time object along with date
Hr_time = paste(Begin_Date, Begin_Hour, ":00"),
# get components of date-time object and assign time zone
Hr_time = parse_date_time(Hr_time, "ymd H:M", tz = {.y}$tz_files),
# change to local time zone
Hr_local = with_tz(Hr_time, tzone = {.y}$tz_local),
# pull out new hour and date in local time
Begin_Hour_loc = as.numeric(hour(Hr_local)),
Begin_Date_loc = date(Hr_local),
# add weekday column
Weekday = weekdays(Begin_Date_loc))) |>
bind_rows()
# Create CSV to make data input easier. Maybe eventually add some logic in script to bypass generating this?
# write_csv(hp_data, "data_outputs/total_ves_hp_by_site.csv")
# Selection tables --------------------------------------------------------
# reshape selection tables to plot duration
selns_data <- selns_og |>
map(~rename(., "Dep" = "Dep_ID")) |>
map2(.y = dep_info,
~mutate(.x,
Begin_Date = ymd(Begin_Date),
Begin_file_date = ymd(Begin_file_date),
Site_ID = {.y}$site_id,
# Dep = {.y}$dep_id,
# re-code anything with a maneuver as "Maneuver" (e.g., "Maneuver+CPA" = "Maneuver")
Behavior = gsub(pattern = ".*Maneuver.*", replacement = "Maneuver", x = Behavior),
# re-code all transit as "Transit" (e.g., "TransitA" = "Transit")
# important that this happens AFTER the Maneuver line above so that "TransitAManeuver" doesn't get re-coded
Behavior = gsub(pattern = ".*Transit.*", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = "CPAManeuver", replacement = "Maneuver", x = Behavior),
Behavior = gsub(pattern = "CPA", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = " ", replacement = "", x = Behavior),
DeltaHours = Delta_Time_s/3600,
# Total_Vessels = rowSums(across(c(TR,M))),
# pull hour as time object along with date
Hr_time = paste(Begin_Date, Begin_Clock),
# get components of date-time object and assign time zone
Hr_time = parse_date_time(Hr_time, "y/m/d H:M:S", tz = {.y}$tz_files),
# change to local time zone
Hr_local = with_tz(Hr_time, tzone = {.y}$tz_local),
# pull out new hour and date in local time
Begin_Hour_loc = as.numeric(hour(Hr_local)),
Begin_Date_loc = date(Hr_local),
# add weekday column
Weekday = weekdays(Begin_Date_loc))) |>
bind_rows()
# Bind rows to get df for inside-outside tables
# don't need to do other adjustments bc will join with seln tables
ins_out_data <- ins_out_og |>
map(~select(., Filename, Date, Selection, used, pins_sm, pins_med, pins_lg, pins_ovrll, Dep_ID)) |>
map(~mutate(., Date = as.numeric(Date),
Date = as.character(Date))) |>
bind_rows()
ins_vessels <- ins_out_data |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
ins_vessels[95,]
ins_vessels[95,]
ins_vessels[95,]$Dep_ID
View(all_selns)
# source helper file
source("scripts/AMP_summary_ves_funs.R")
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# source helper file
source("scripts/AMP_summary_ves_funs.R")
# For each deployment in the dep_info list, load in compiled selection table
selns_og <- dep_info |>
map(~read_delim(choose.files(caption = paste0({.}$site_id, {.}$dep_id, " Complied seln table .txt"))))|>
# use imap() to get info based on index of each iteration
# in this case, we want the name of the list element, designated as ".y"
imap(~mutate(., Dep_ID = .y))
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
# For each deployment in the dep_info list, load in compiled selection table
selns_og <- dep_info |>
map(~read_delim(choose.files(caption = paste0({.}$site_id, {.}$dep_id, " Complied seln table .txt"))))|>
# use imap() to get info based on index of each iteration
# in this case, we want the name of the list element, designated as ".y"
imap(~mutate(., Dep_ID = .y))
# reshape selection tables to plot duration
selns_data <- selns_og |>
map(~rename(., "Dep" = "Dep_ID")) |>
map2(.y = dep_info,
~mutate(.x,
Begin_Date = ymd(Begin_Date),
Begin_file_date = ymd(Begin_file_date),
Site_ID = {.y}$site_id,
# Dep = {.y}$dep_id,
# re-code anything with a maneuver as "Maneuver" (e.g., "Maneuver+CPA" = "Maneuver")
Behavior = gsub(pattern = ".*Maneuver.*", replacement = "Maneuver", x = Behavior),
# re-code all transit as "Transit" (e.g., "TransitA" = "Transit")
# important that this happens AFTER the Maneuver line above so that "TransitAManeuver" doesn't get re-coded
Behavior = gsub(pattern = ".*Transit.*", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = "CPAManeuver", replacement = "Maneuver", x = Behavior),
Behavior = gsub(pattern = "CPA", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = " ", replacement = "", x = Behavior),
DeltaHours = Delta_Time_s/3600,
# Total_Vessels = rowSums(across(c(TR,M))),
# pull hour as time object along with date
Hr_time = paste(Begin_Date, Begin_Clock),
# get components of date-time object and assign time zone
Hr_time = parse_date_time(Hr_time, "y/m/d H:M:S", tz = {.y}$tz_files),
# change to local time zone
Hr_local = with_tz(Hr_time, tzone = {.y}$tz_local),
# pull out new hour and date in local time
Begin_Hour_loc = as.numeric(hour(Hr_local)),
Begin_Date_loc = date(Hr_local),
# add weekday column
Weekday = weekdays(Begin_Date_loc))) |>
bind_rows()
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))
View(ins_vessels)
View(selns_data)
View(selns_data)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
View(Compile_Raven_selns)
View(Compile_Raven_selns)
View(Compile_Raven_selns)
View(Compile_Raven_selns)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
##### Deployment info ###
site_id <- dlg_input(message = "Site ID, e.g. 'TRE'")$res
dep_id <- dlg_input(message = "Deployment ID, YYYYMM")$res
#############################################################
#### Compile Vessel Selections from Raven ####
all_selns <- Compile_Raven_selns(site_id = site_id,
dep_id = dep_id)
# Save compiled selection table in outputs folder
write.table(all_selns,
paste0("data_outputs/", site_id,"_",dep_id,"_all_vessel_selections.txt"),
row.names = FALSE)
selns_og <- dep_info |>
map(~read_delim(choose.files(caption = paste0({.}$site_id, {.}$dep_id, " Complied seln table .txt"))))|>
# use imap() to get info based on index of each iteration
# in this case, we want the name of the list element, designated as ".y"
imap(~mutate(., Dep_ID = .y))
# reshape selection tables to plot duration
selns_data <- selns_og |>
map(~rename(., "Dep" = "Dep_ID")) |>
map2(.y = dep_info,
~mutate(.x,
Begin_Date = ymd(Begin_Date),
Begin_file_date = ymd(Begin_file_date),
Site_ID = {.y}$site_id,
# Dep = {.y}$dep_id,
# re-code anything with a maneuver as "Maneuver" (e.g., "Maneuver+CPA" = "Maneuver")
Behavior = gsub(pattern = ".*Maneuver.*", replacement = "Maneuver", x = Behavior),
# re-code all transit as "Transit" (e.g., "TransitA" = "Transit")
# important that this happens AFTER the Maneuver line above so that "TransitAManeuver" doesn't get re-coded
Behavior = gsub(pattern = ".*Transit.*", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = "CPAManeuver", replacement = "Maneuver", x = Behavior),
Behavior = gsub(pattern = "CPA", replacement = "Transit", x = Behavior),
Behavior = gsub(pattern = " ", replacement = "", x = Behavior),
DeltaHours = Delta_Time_s/3600,
# Total_Vessels = rowSums(across(c(TR,M))),
# pull hour as time object along with date
Hr_time = paste(Begin_Date, Begin_Clock),
# get components of date-time object and assign time zone
Hr_time = parse_date_time(Hr_time, "y/m/d H:M:S", tz = {.y}$tz_files),
# change to local time zone
Hr_local = with_tz(Hr_time, tzone = {.y}$tz_local),
# pull out new hour and date in local time
Begin_Hour_loc = as.numeric(hour(Hr_local)),
Begin_Date_loc = date(Hr_local),
# add weekday column
Weekday = weekdays(Begin_Date_loc))) |>
bind_rows()
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
ins_vessels[477,]
ins_out_data <- ins_out_og |>
map(~select(., Filename, Date, Selection, used, pins_sm, pins_med, pins_lg, pins_ovrll, Dep_ID)) |>
map(~mutate(., Date = as.numeric(Date),
Date = as.character(Date))) |>
bind_rows()
# For each deployment in the dep_info list, load in I-O excel files
ins_out_og <- dep_info |>
map(~read_xlsx(choose.files(caption = paste0({.}$site_id, {.}$dep_id, " I-O table .xlsx"))))|>
# use imap() to get info based on index of each iteration
# in this case, we want the name of the list element, designated as ".y"
imap(~mutate(., Dep_ID = .y))
ins_out_data <- ins_out_og |>
map(~select(., Filename, Date, Selection, used, pins_sm, pins_med, pins_lg, pins_ovrll, Dep_ID)) |>
map(~mutate(., Date = as.numeric(Date),
Date = as.character(Date))) |>
bind_rows()
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))
View(ins_vessels)
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
# For each deployment in the dep_info list, load in I-O excel files
ins_out_og <- dep_info |>
map(~read_xlsx(choose.files(caption = paste0({.}$site_id, {.}$dep_id, " I-O table .xlsx"))))|>
# use imap() to get info based on index of each iteration
# in this case, we want the name of the list element, designated as ".y"
imap(~mutate(., Dep_ID = .y))
ins_out_data <- ins_out_og |>
map(~select(., Filename, Date, Selection, used, pins_sm, pins_med, pins_lg, pins_ovrll, Dep_ID)) |>
map(~mutate(., Date = as.numeric(Date),
Date = as.character(Date))) |>
bind_rows()
ins_vessels <- ins_out_data |>
filter(used == 1) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
ins_vessels <- ins_out_data |>
filter(used == 1) |>
filter(pins_sm >= 0.75) |>
mutate(begin_file_date = ymd(str_sub(Date, 1,6)),
seln_num = as.numeric(gsub(pattern = "S", replacement = "", x = Selection)))|>
left_join(selns_data,
by = c("Dep_ID" = "Dep",
"seln_num" = "Selection",
"begin_file_date" = "Begin_file_date"))
# get counts per site per date per hour for inside vessels
# will it break to just try....
ins_hp <- inside_tables_to_hp(ins_table = ins_vessels)
