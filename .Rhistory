data = wkly_mean_adj_tot)
# deployment*Weekday
week_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_tot)
AICc(week_aov, week_aov_int)
# Tukey HSD for additive model (lower AIC than intxn)
tukey_week <- tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
# inside vessels
wkly_mean_adj_ins <- wkly_mean_adj_ins |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# 2-way ANOVA deployment + Weekday
week_ins_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_ins)
# 2-way ANOVA deployment*Weekday
week_ins_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_ins)
AICc(week_ins_aov, week_ins_aov_int)
#                  df     AICc
# week_ins_aov     18 1689.987
# week_ins_aov_int 78 1738.303
# Tukey HSD for additive model (lower AIC than intxn)
tukey_week_ins <- tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
# maneuvers
wkly_mean_adj_ins_man <- wkly_mean_adj_ins_man |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# 2-way ANOVA deployment + Weekday
week_man_aov <- aov(man_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_ins_man)
# 2-way ANOVA deployment*Weekday
week_man_aov_int <- aov(man_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_ins_man)
AICc(week_man_aov, week_man_aov_int)
tukey_week_man <- tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
View(tukey_week)
tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
week_man_aov
# try "type 3" anova for unbalanced design
library(car)
Anova(lm(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot,
contrasts=list(npz_dep=contr.sum, Weekday=contr.sum)),
type=3)
anova_t3_tot <- Anova(lm(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot,
contrasts=list(npz_dep=contr.sum, Weekday=contr.sum)),
type=3)
TukeyHSD(anova_t3_tot)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_network[2:3])
View(maneuver_freq_table)
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
# deployment*Weekday
week_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_tot)
week_aov
week_aov_int
summary(week_aov)
summary(week_aov_int)
tukey_week <- tidy(TukeyHSD(week_aov_int)) |>
filter(adj.p.value <= 0.10)
tukey_week
View(tukey_week)
tukey_week <- tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
summary(week_aov)
tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
tukey_week_man <- tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
#### Load libraries ####
# NOAA-approved tidyverse
tidyverse_short<-c("broom","cli","crayon","dbplyr","dplyr","dtplyr","forcats","ggplot2","googledrive","googlesheets4","hms","httr","jsonlite","lubridate","magrittr","modelr","pillar","purrr","readr","readxl","reprex","rlang","rstudioapi","rvest","stringr","tibble","tidyr","xml2")
lapply(tidyverse_short, require, character.only = TRUE)
library(scales)
# library(ggalt)
# library(ggsci)
library(ggdist)
library(ggh4x) # nested faceting
library(ggpubr) # additional options for publication plots
library(suncalc) # sunrise & sunset calculations
library(geosphere)
library(ggpattern)
library(MuMIn) # AICc values
theme_set(theme_bw(
base_size = 14
))
# source helper file
source("code/AMP_summary_ves_funs.R")
#### Load compiled hourly presence table ####
# This is generated using Reformat_data_for_HP script
all_sites_hp <- read_csv("data/All_sites_tables/hourly_pres_allsites_local.csv")
all_sites_inout <- read_csv("data/All_sites_tables/total_ves_ins_out_by_site.csv")
#### Add columns to original dataset to help group for plotting ####
all_sites_hp <- all_sites_hp |>
mutate(
# replace NA's with 0's to accurately incorporate hours with presence = 0
Total_Vessels = replace_na(Total_Vessels, 0),
total_inside = replace_na(total_inside, 0),
total_inside_small = replace_na(total_inside_small, 0),
# add categorical Y/N column for vessels present to calculate proportions
ves_yn = ifelse(Total_Vessels == 0, "N","Y"),
ins_ves_yn = ifelse(total_inside == 0, "N","Y"),
ins_ves_small_yn = ifelse(total_inside_small == 0, "N","Y"),
# fix incorrect Dep_ID for 2018_08
Dep_ID = str_replace(Dep_ID, pattern = "2018-08-10", replacement = "201808"),
# add date without year to collapse across years
Month = month(Begin_Date_loc),
Week = isoweek(Begin_Date_loc),
Day_month = mday(Begin_Date_loc),
# re-create dates as all in the same year for plotting on single graph
Date_noyr = as_date(paste0("2000", "-", Month, "-", Day_month), format = "%Y-%m-%d"),
# get start date for each week
Date_week = as_date(paste(as.character(year(Begin_Date_loc)),Week,"1",sep = "-"), format = "%Y-%W-%w"),
# add season based on month
season = case_when(month(Date_noyr) == 12 | month(Date_noyr) == 1 | month(Date_noyr) == 2 ~ "Summer",
month(Date_noyr) == 3 | month(Date_noyr) == 4 | month(Date_noyr) == 5 ~ "Autumn",
month(Date_noyr) == 6 | month(Date_noyr) == 7 | month(Date_noyr) == 8 ~ "Winter",
TRUE ~ "Spring"
),
# add AMP Regional Networks and NPZ IDs based on Site_ID
network = case_when(Site_ID == "CG" | Site_ID == "EP" | Site_ID == "WP" ~ "Temperate East",
Site_ID == "DNE" | Site_ID == "DSW" | Site_ID == "NGN"| Site_ID == "NGS" ~ "Northwest",
TRUE ~ "South-west"
),
npz_id = case_when(
# Cod Grounds
Site_ID == "CG" ~ "CGMP",
# Solitary Islands
Site_ID == "EP" | Site_ID == "WP" ~ "SIMP",
# Dampier
Site_ID == "DNE" | Site_ID == "DSW" ~ "DMP",
# Ningaloo
Site_ID == "NGN"| Site_ID == "NGS" ~ "NMP",
# Two Rocks
Site_ID == "TRE" | Site_ID == "TRW" ~ "TRMP",
# Jurien
Site_ID == "JSE" | Site_ID == "JNE" ~ "JMP",
# Geographe
Site_ID == "GEO" ~ "GMP",
# Murat
Site_ID == "MRE" | Site_ID == "MRW" ~ "MMP",
# South-west Corner
Site_ID == "SWS" ~ "SWCMP"
)
)
##### Deployment info ###
depinfo <- read_csv("data/AMP_deployment_info.csv")
# create table of data gaps within nominal year (2000)
gaps <- data.frame("Gap_start" = c(as.POSIXct("2000-02-20",format="%Y-%m-%d"), #CGMP gap 1 start
as.POSIXct("2000-08-04",format="%Y-%m-%d"), #CGMP gap 2 start
as.POSIXct("2000-06-24",format="%Y-%m-%d"), #CGMP gap 3 start
as.POSIXct("2000-01-15",format="%Y-%m-%d"), #SIMP gap 1 start
as.POSIXct("2000-09-12",format="%Y-%m-%d"), #SIMP gap 2 start
as.POSIXct("2000-08-09",format="%Y-%m-%d"), #SIMP gap 3 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #DMP gap 1 start
as.POSIXct("2000-11-04",format="%Y-%m-%d"), #DMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #NMP gap 1 start
as.POSIXct("2000-11-18",format="%Y-%m-%d"), #NMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #GMP gap 1 start
as.POSIXct("2000-04-03",format="%Y-%m-%d"), #GMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #JMP gap 1 start
as.POSIXct("2000-03-10",format="%Y-%m-%d"), #JMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #MMP gap 1 start
as.POSIXct("2000-05-03",format="%Y-%m-%d"), #MMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #SWCMP gap 1 start
as.POSIXct("2000-04-11",format="%Y-%m-%d"), #SWCMP gap 2 start
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #TRMP gap 1 start
as.POSIXct("2000-08-02",format="%Y-%m-%d") #TRMP gap 2 start
),
"Gap_end" = c(as.POSIXct("2000-04-11",format="%Y-%m-%d"), #CGMP gap 1 end
as.POSIXct("2000-12-12",format="%Y-%m-%d"), #CGMP gap 2 end
as.POSIXct("2000-07-01",format="%Y-%m-%d"), #CGMP gap 3 end
as.POSIXct("2000-06-10",format="%Y-%m-%d"), #SIMP gap 1 end
as.POSIXct("2000-12-12",format="%Y-%m-%d"), #SIMP gap 2 end
as.POSIXct("2000-08-10",format="%Y-%m-%d"), #SIMP gap 3 end
as.POSIXct("2000-09-09",format="%Y-%m-%d"), #DMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #DMP gap 2 end
as.POSIXct("2000-09-25",format="%Y-%m-%d"), #NMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #NMP gap 2 end
as.POSIXct("2000-01-12",format="%Y-%m-%d"), #GMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #GMP gap 2 end
as.POSIXct("2000-01-05",format="%Y-%m-%d"), #JMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #JMP gap 2 end
as.POSIXct("2000-02-08",format="%Y-%m-%d"), #MMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #MMP gap 2 end
as.POSIXct("2000-01-18",format="%Y-%m-%d"), #SWCMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #SWCMP gap 2 end
as.POSIXct("2000-05-10",format="%Y-%m-%d"), #TRMP gap 1 end
as.POSIXct("2000-12-31",format="%Y-%m-%d") #TRMP gap 2 end
),
"npz_id" = c("CGMP",
"CGMP",
"CGMP",
"SIMP",
"SIMP",
"SIMP",
"DMP",
"DMP",
"NMP",
"NMP",
"GMP",
"GMP",
"JMP",
"JMP",
"MMP",
"MMP",
"SWCMP",
"SWCMP",
"TRMP",
"TRMP"))
dep_startend <- data.frame("dep_start" = c(as.POSIXct("2000-07-01",format="%Y-%m-%d"), #CGMP 201807 start
as.POSIXct("2000-12-12",format="%Y-%m-%d"), #CGMP 201812 first part
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #CGMP 201812 second part
as.POSIXct("2000-04-11",format="%Y-%m-%d"), #CGMP 201904 start
as.POSIXct("2000-08-10",format="%Y-%m-%d"), #SIMP 201808 start
as.POSIXct("2000-12-12",format="%Y-%m-%d"), #SIMP 201812 first part
as.POSIXct("2000-01-01",format="%Y-%m-%d"), #SIMP 201812 second part
as.POSIXct("2000-06-10",format="%Y-%m-%d"), #SIMP 201906 start
as.POSIXct("2000-09-09",format="%Y-%m-%d"), #DMP start
as.POSIXct("2000-09-25",format="%Y-%m-%d"), #NMP start
as.POSIXct("2000-01-12",format="%Y-%m-%d"), #GMP start
as.POSIXct("2000-01-05",format="%Y-%m-%d"), #JMP start
as.POSIXct("2000-02-08",format="%Y-%m-%d"), #MMP start
as.POSIXct("2000-01-18",format="%Y-%m-%d"), #SWCMP start
as.POSIXct("2000-05-10",format="%Y-%m-%d") #TRMP start
),
"dep_end" = c(as.POSIXct("2000-08-04",format="%Y-%m-%d"), #CGMP 201807 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #CGMP 201812 first part
as.POSIXct("2000-02-20",format="%Y-%m-%d"), #CGMP 201812 second part
as.POSIXct("2000-06-24",format="%Y-%m-%d"), #CGMP 201904 end
as.POSIXct("2000-09-12",format="%Y-%m-%d"), #SIMP 201808 end
as.POSIXct("2000-12-31",format="%Y-%m-%d"), #SIMP 201812 first part
as.POSIXct("2000-01-15",format="%Y-%m-%d"), #SIMP 201812 second part
as.POSIXct("2000-08-09",format="%Y-%m-%d"), #SIMP 201906 end
as.POSIXct("2000-11-04",format="%Y-%m-%d"), #DMP end
as.POSIXct("2000-11-18",format="%Y-%m-%d"), #NMP end
as.POSIXct("2000-04-03",format="%Y-%m-%d"), #GMP end
as.POSIXct("2000-03-10",format="%Y-%m-%d"), #JMP end
as.POSIXct("2000-05-03",format="%Y-%m-%d"), #MMP end
as.POSIXct("2000-04-11",format="%Y-%m-%d"), #SWCMP end
as.POSIXct("2000-08-02",format="%Y-%m-%d") #TRMP end
),
"npz_id" = c("CGMP",
"CGMP",
"CGMP",
"CGMP",
"SIMP",
"SIMP",
"SIMP",
"SIMP",
"DMP",
"NMP",
"GMP",
"JMP",
"MMP",
"SWCMP",
"TRMP"),
"Dep_ID" = c("201807",
"201812",
"201812",
"201904",
"201808",
"201812",
"201812",
"201906",
"202009",
"201909",
"202201",
"202201",
"202002",
"202201",
"202105"))
gaps <- gaps |>
mutate(network = case_when(npz_id == "CGMP" | npz_id == "SIMP" ~ "Temperate East",
npz_id == "DMP" | npz_id == "NMP" ~ "Northwest", TRUE ~ "South-west"
),
network = factor(network, levels = c("Temperate East","Northwest","South-west")))
dep_startend <- dep_startend |>
mutate(network = case_when(npz_id == "CGMP" | npz_id == "SIMP" ~ "Temperate East",
npz_id == "DMP" | npz_id == "NMP" ~ "Northwest", TRUE ~ "South-west"
),
network = factor(network, levels = c("Temperate East","Northwest","South-west")))
gaps_wk <- gaps |>
mutate(Gap_start = floor_date(Gap_start, "1 week"),
Gap_end = floor_date(Gap_end, "1 week"))
# summarize in-out data to get n vessels used for I-O analysis per deployment
ins_out_counts <- all_sites_inout |>
group_by(Dep_ID) |>
summarize(n_ves_used_inout = n()) |>
rename("Dep" = "Dep_ID")
# summarize full df to get counts per deployment
all_ves_by_site <- all_sites_hp |>
group_by(network, npz_id, Site_ID, Dep_ID, Dep) |>
summarise(n_days = n_distinct(Begin_Date_loc),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE),
mean_per_day = Total_ves_dep/n_days,
mean_overall = mean(Total_Vessels)) |>
mutate(Inside_transit = Total_inside - Inside_maneuver,
Inside_transit_small = Total_inside_small - Inside_maneuver_small) |>
left_join(ins_out_counts, by = "Dep") |>
mutate(
prop_inside = Total_inside/n_ves_used_inout,
total_outside = n_ves_used_inout - Total_inside,
prop_inside_small = Total_inside_small/n_ves_used_inout,
total_out_small = n_ves_used_inout - Total_inside_small)
all_ves_by_npz <- all_sites_hp |>
group_by(network, npz_id, Site_ID, Dep_ID, Dep) |>
left_join(ins_out_counts, by = "Dep") |>
ungroup() |>
group_by(network, npz_id, Dep_ID) |>
summarise(n_days = n_distinct(Site_ID, Begin_Date_loc),
Total_ves_npz = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE),
mean_per_day = Total_ves_npz/n_days,
n_used_inout = sum(unique(n_ves_used_inout)),
mean_overall = mean(Total_Vessels),
) |>
mutate(Inside_transit = Total_inside - Inside_maneuver,
Inside_transit_small = Total_inside_small - Inside_maneuver_small,
total_outside = n_used_inout - Total_inside,
total_out_small = n_used_inout - Total_inside_small,
prop_inside = Total_inside/n_used_inout,
prop_inside_small = Total_inside_small/sum(n_used_inout),
prop_maneuver = Inside_maneuver/Total_inside,
prop_maneuver_small = Inside_maneuver_small/Total_inside_small)
all_ves_long <- all_ves_by_site |>
pivot_longer(cols = -c(network, npz_id, Site_ID, Dep_ID, Dep, n_days),
values_to = "Ves_counts", names_to = "Ves_behav") |>
# relevel categorical values for plotting
mutate(Ves_behav = fct(Ves_behav),
Ves_behav = fct_relevel(Ves_behav, c("Total_ves_dep","Total_inside_small", "Total_inside", "Inside_transit_small","Inside_maneuver_small", "Inside_maneuver","Inside_transit")),
network = fct(network),
network = fct_relevel(network, c("Temperate East","Northwest"))) |>
# add diverging counts where inside values are negative for plotting
mutate(ves_counts_diverge = ifelse(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver",Ves_counts*(-1),Ves_counts),
npz_id = fct(npz_id),
npz_id = fct_relevel(npz_id, c("CGMP","SIMP","DMP","NMP")))
all_ves_by_day <- all_sites_hp |>
group_by(network, npz_id, Site_ID, Dep_ID, Dep, Date_week, Begin_Date_loc) |>
summarise(n_hrs = n_distinct(Begin_Hour_loc),
n_ves_hrs = sum(ifelse(ves_yn == "Y", 1, 0), na.rm = TRUE),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE),
# daily means
mean_total_ves = mean(Total_Vessels),
mean_ins_ves = mean(total_inside),
mean_ins_sm_ves = mean(total_inside_small)) |>
mutate(daily_ves_perhr = Total_ves_dep/n_hrs,
total_prophr = n_ves_hrs/n_hrs,
Inside_transit = Total_inside - Inside_maneuver,
Inside_transit_small = Total_inside_small - Inside_maneuver_small)
all_ves_by_day_noyr <- all_sites_hp |>
group_by(network, npz_id,
Site_ID,
Dep_ID,
Dep,
Date_week, Date_noyr) |>
summarise(n_hrs = n_distinct(Begin_Hour_loc),
n_ves_hrs = sum(ifelse(ves_yn == "Y", 1, 0), na.rm = TRUE),
Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE),
# daily means
# mean_total_ves = mean(Total_Vessels),
# mean_ins_ves = mean(total_inside),
# mean_ins_sm_ves = mean(total_inside_small)
) |>
filter(n_hrs > 23) |> # only include full days
ungroup() |>
# re-group to get counts pooled by NPZ
group_by(network, npz_id,
Dep_ID,
Date_week, Date_noyr) |>
summarise(n_hrs_tot = sum(n_hrs),
n_ves_hrs_tot = sum(n_ves_hrs, na.rm = TRUE),
Total_ves_npz = sum(Total_ves_dep, na.rm = TRUE),
Total_inside_npz = sum(Total_inside, na.rm = TRUE),
Total_inside_small_npz = sum(Total_inside_small, na.rm = TRUE),
Inside_maneuver_npz = sum(Inside_maneuver, na.rm = TRUE),
Inside_maneuver_small_npz = sum(Inside_maneuver_small, na.rm = TRUE)
) |>
mutate(daily_ves_perhr = Total_ves_npz/n_hrs_tot*24, # ves/day = ves/hour * 24hr/day
total_prophr = n_ves_hrs_tot/n_hrs_tot,
Inside_transit_npz = Total_inside_npz - Inside_maneuver_npz,
Inside_transit_small_npz = Total_inside_small_npz - Inside_maneuver_small_npz,
network = case_when(npz_id == "CGMP" | npz_id == "SIMP" ~ "Temperate East",
npz_id == "DMP" | npz_id == "NMP" ~ "Northwest", TRUE ~ "South-west"
),
network = factor(network, levels = c("Temperate East","Northwest","South-west")))
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Total_inside/total_outside)
View(inout_freq_table)
fisher.test(inout_freq_table[2:3], simulate.p.value = TRUE)
?p.adjust()
?fisher.test
fisher.test(inout_freq_table[2:3], hybrid = TRUE, simulate.p.value = TRUE)
?pairwise.prop.test
pairwise.prop.test(inout_freq_table[2:3], p.adjust.method = "bonf")
pairwise.prop.test(as.matrix(inout_freq_table[2:3]), p.adjust.method = "bonf")
warnings()
pairwise.prop.test(as.matrix(inout_freq_table[1:3]), p.adjust.method = "bonf")
pairwise.prop.test(as.matrix(inout_freq_table[2:3]), p.adjust.method = "bonf")
?pairwise.fisher.test
install.packages("fmsb")
library(fmsb)
?pairwise.fisher.test
pairwise.fisher.test(x=inout_freq_table[2], n=sum(inout_freq_table[2:3]), p.adjust.method = "bonf")
pairwise.fisher.test(x=inout_freq_table[2], n=sum_across(inout_freq_table[2:3]), p.adjust.method = "bonf")
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(total_vessels = sum(Total_inside, total_outside),
prop_inside = Total_inside/total_outside)
pairwise.fisher.test(x=inout_freq_table[2], n=inout_freq_table[4], p.adjust.method = "bonf")
pairwise.fisher.test(x=inout_freq_table$Total_inside, n=inout_freq_table$total_vessels, p.adjust.method = "bonf")
inout_freq_table$npz_dep
pairwise.fisher.test(x=inout_freq_table$Total_inside, n=inout_freq_table$total_vessels, p.adjust.method = "bonf") |> tidy()
as.data.frame(pairwise.fisher.test(x=inout_freq_table$Total_inside, n=inout_freq_table$total_vessels, p.adjust.method = "bonf"))
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(total_vessels = sum(Total_inside, total_outside),
prop_inside = Total_inside/total_outside)
View(inout_freq_table)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(
prop_maneuver = Inside_maneuver/Total_inside)
unique(all_ves_long$Ves_behav)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Inside_transit" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(total_inside = sum(Inside_transit, Inside_maneuver),
prop_maneuver = Inside_maneuver/total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
pairwise.fisher.test(x=maneuver_freq_table$Inside_maneuver, n=inout_freq_table$total_inside, p.adjust.method = "bonf")
pairwise.fisher.test(x=maneuver_freq_table$Inside_maneuver, n=maneuver_freq_table$total_inside, p.adjust.method = "bonf")
View(all_sites_hp)
OlsonNames()
unique(all_sites_hp$Dep)
View(depinfo)
