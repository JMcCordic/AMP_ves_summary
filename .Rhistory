group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total) |>
mutate(prop_inside = Total_inside/total_outside)
chisq.test(inout_freq_network[2:3])
inout_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "total_outside") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Total_inside/total_outside)
chisq.test(inout_freq_table[2:3])
fisher.test(inout_freq_table[2:3], simulate.p.value = TRUE)
fisher.test(inout_freq_network[2:3])
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_network[2:3])
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP20108"))
tidy(kw_simp201812)
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
#### Load libraries ####
# NOAA-approved tidyverse
tidyverse_short<-c("broom","cli","crayon","dbplyr","dplyr","dtplyr","forcats","ggplot2","googledrive","googlesheets4","hms","httr","jsonlite","lubridate","magrittr","modelr","pillar","purrr","readr","readxl","reprex","rlang","rstudioapi","rvest","stringr","tibble","tidyr","xml2")
lapply(tidyverse_short, require, character.only = TRUE)
library(scales)
# library(ggalt)
# library(ggsci)
library(ggdist)
library(ggh4x) # nested faceting
library(ggpubr) # additional options for publication plots
library(suncalc) # sunrise & sunset calculations
library(geosphere)
library(ggpattern)
theme_set(theme_bw(
base_size = 14
))
# source helper file
source("code/AMP_summary_ves_funs.R")
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP20108"))
View(wkly_means_tot)
View(wkly_mean_adj_tot)
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP20108"))
# start by getting daily counts
all_ves_wkdy <- all_sites_hp |>
group_by(network, npz_id, Dep_ID, Dep, Date_week, Weekday, Begin_Date_loc)|>
# get daily vessel counts per weekday: total, inside, inside_small, maneuver, maneuver_small
summarise(Total_ves_dep = sum(Total_Vessels, na.rm = TRUE),
Total_inside = sum(total_inside, na.rm = TRUE),
Total_inside_small = sum(total_inside_small, na.rm = TRUE),
Inside_maneuver = sum(man_inside, na.rm = TRUE),
Inside_maneuver_small = sum(man_inside_small, na.rm = TRUE)) |>
mutate(Inside_transit = Total_inside - Inside_maneuver,
Inside_transit_small = Total_inside_small - Inside_maneuver_small,
Weekday = factor(Weekday, levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")),
network = case_when(npz_id == "CGMP" | npz_id == "SIMP" ~ "Temperate East",
npz_id == "DMP" | npz_id == "NMP" ~ "Northwest", TRUE ~ "South-west"
),
network = factor(network, levels = c("Temperate East","Northwest","South-west")))
levels(all_ves_wkdy$Weekday) <- c("M","T","W","Th","F","Sa","Su")
# Weekly mean-adjusted counts for total vessels
wkly_mean_adj_tot <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_ves_dep, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence for days with presence
mutate(mean_tot = mean(Total_ves_dep, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
tot_wkdy_adj = Total_ves_dep - mean_tot)
# summarize mean & SD for plots
wkly_means_tot <- wkly_mean_adj_tot |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_wkdy_adj = mean(tot_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(sd_lower = mean_wkdy_adj - 0.5*(sd(mean_wkdy_adj)),
sd_upper = mean_wkdy_adj + 0.5*(sd(mean_wkdy_adj)))
# Weekly mean-adjusted counts, inside vessels
wkly_mean_adj_ins <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Total_inside, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence inside
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence inside for days with presence inside
mutate(mean_tot = mean(Total_inside, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
tot_wkdy_adj = Total_inside - mean_tot)
wkly_means_ins <- wkly_mean_adj_ins |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_wkdy_adj = mean(tot_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(sd_lower = mean_wkdy_adj - 0.5*(sd(mean_wkdy_adj)),
sd_upper = mean_wkdy_adj + 0.5*(sd(mean_wkdy_adj)))
# Weekly mean-adjusted counts, maneuvers
wkly_mean_adj_ins_man <- all_ves_wkdy |>
# group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# get n_days per week in dataset
summarize(n_days = n(),
week_sum = sum(Inside_maneuver, na.rm = TRUE)) |>
# only keep full weeks n_days == 7
# only keep weeks with presence of maneuvers
filter(n_days == 7,
week_sum > 0) |>
# get original weekday counts
left_join(all_ves_wkdy) |>
# re-group to week level
group_by(network, npz_id, Dep_ID, Dep, Date_week) |>
# calculate weekly mean of total presence for days with presence of maneuvers
mutate(mean_man = mean(Inside_maneuver, na.rm = TRUE),
# calculate mean-adjusted counts per weekday
man_wkdy_adj = Inside_maneuver - mean_man)
wkly_means_ins_man <- wkly_mean_adj_ins_man |>
group_by(network, npz_id, Dep_ID, Weekday) |>
# get mean of mean-adjusted counts for each weekday
summarise(mean_man_wkdy_adj = mean(man_wkdy_adj, na.rm = TRUE)) |>
# get lower & upper bounds of SD of the mean of the adjusted counts
mutate(man_sd_lower = mean_man_wkdy_adj - 0.5*(sd(mean_man_wkdy_adj)),
man_sd_upper = mean_man_wkdy_adj + 0.5*(sd(mean_man_wkdy_adj)))
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# CGMP 201807
kw_cgmp201807 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
# CGMP 201812
kw_cgmp201812 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
tidy(kw_cgmp201812)
# CGMP 201904
kw_cgmp201904 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP20108"))
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP20108")
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808"))
tidy(kw_simp201812)
tidy(kw_simp201808)
kw_simp201808
# SIMP 201812
kw_simp201812 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201812"))
kw_simp201812
# SIMP 201906 -- NS
kw_simp201906 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201906"))
kw_simp201906
unique(wkly_mean_adj_tot$npz_dep)
# DMP202009 -- NS
kw_DMP202009 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "DMP202009"))
kw_DMP202009
# NMP201909
kw_NMP201909 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "NMP201909"))
kw_NMP201909
# GMP202201 -- NS
kw_GMP202201 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "GMP202201"))
kw_GMP202201
kw_JMP202201 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "JMP202201"))
kw_JMP202201
kw_MMP202002 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "MMP202002"))
kw_MMP202002
pairwise.wilcox.test(kw_MMP202002)
pairwise.wilcox.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "MMP202002"))
?pairwise.wilcox.test
# CGMP 201807 -- NS
kw_cgmp201807 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
# CGMP 201812 -- NS
kw_cgmp201812 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
tidy(kw_cgmp201812)
# CGMP 201904 -- NS
kw_cgmp201904 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
# SIMP 201808
kw_simp201808 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808"))
kw_simp201808
# CGMP 201807 -- NS
kw_cgmp201807 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201807"))
tidy(kw_cgmp201807)
# CGMP 201812 -- NS
kw_cgmp201812 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201812"))
tidy(kw_cgmp201812)
# CGMP 201904 -- NS
kw_cgmp201904 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "CGMP201904"))
tidy(kw_cgmp201904)
# SIMP 201808
kw_simp201808 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808"))
kw_simp201808
wkly_mean_adj_tot |> filter(npz_dep == "SIMP201808")$Weekday
kw_SWCMP202201 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "SWCMP202201"))
kw_SWCMP202201
kw_MMP202002 <- kruskal.test(Total_ves_dep ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "MMP202002"))
kw_MMP202002
kw_MMP202002 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "MMP202002"))
kw_TRMP202105 <- kruskal.test(tot_wkdy_adj ~ Weekday,
data = wkly_mean_adj_tot |>
filter(npz_dep == "TRMP202105"))
kw_TRMP202105
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
p.adjust.methods = "bonferroni")
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
p.adjust.methods = c("bonferroni"))
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
p.adjust.methods = c("bonf"))
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday)
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
method = p.adjust.methods)
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
method = "p.adjust.methods"bonf"")
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
method = "bonf")
wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808") |>
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday)
attach(wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808"))
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday)
pairwise.wilcox.test(x = tot_wkdy_adj,
g = Weekday,
p.adjust.method = "bonf")
simp201808_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808"))
simp201808_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808")
pairwise.wilcox.test(x = simp201808_wkly_mean_adj_tot,
g = Weekday,
p.adjust.method = "bonf")
pairwise.wilcox.test(x = simp201808_wkly_mean_adj_tot$tot_wkdy_adj,
g = simp201808_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
warnings()
simp201808_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "SIMP201808")
pairwise.wilcox.test(x = simp201808_wkly_mean_adj_tot$tot_wkdy_adj,
g = simp201808_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
dmp_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "DMP202009")
pairwise.wilcox.test(x = dmp_wkly_mean_adj_tot$tot_wkdy_adj,
g = dmp_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
gmp_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "GMP202201")
pairwise.wilcox.test(x = gmp_wkly_mean_adj_tot$tot_wkdy_adj,
g = gmp_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
mmp_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "MMP202002")
pairwise.wilcox.test(x = mmp_wkly_mean_adj_tot$tot_wkdy_adj,
g = mmp_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
trmp_wkly_mean_adj_tot <- wkly_mean_adj_tot |>
filter(npz_dep == "TRMP202105")
pairwise.wilcox.test(x = trmp_wkly_mean_adj_tot$tot_wkdy_adj,
g = trmp_wkly_mean_adj_tot$Weekday,
p.adjust.method = "bonf")
# total counts
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
# deployment*Weekday
week_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_tot)
AICc(week_aov, week_aov_int)
library(MuMIn)
# total counts
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
# deployment*Weekday
week_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_tot)
AICc(week_aov, week_aov_int)
# Tukey HSD for additive model (lower AIC than intxn)
tukey_week <- tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
# inside vessels
wkly_mean_adj_ins <- wkly_mean_adj_ins |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# 2-way ANOVA deployment + Weekday
week_ins_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_ins)
# 2-way ANOVA deployment*Weekday
week_ins_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_ins)
AICc(week_ins_aov, week_ins_aov_int)
#                  df     AICc
# week_ins_aov     18 1689.987
# week_ins_aov_int 78 1738.303
# Tukey HSD for additive model (lower AIC than intxn)
tukey_week_ins <- tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
# maneuvers
wkly_mean_adj_ins_man <- wkly_mean_adj_ins_man |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# 2-way ANOVA deployment + Weekday
week_man_aov <- aov(man_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_ins_man)
# 2-way ANOVA deployment*Weekday
week_man_aov_int <- aov(man_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_ins_man)
AICc(week_man_aov, week_man_aov_int)
tukey_week_man <- tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
View(tukey_week)
tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
week_man_aov
# try "type 3" anova for unbalanced design
library(car)
Anova(lm(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot,
contrasts=list(npz_dep=contr.sum, Weekday=contr.sum)),
type=3)
anova_t3_tot <- Anova(lm(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot,
contrasts=list(npz_dep=contr.sum, Weekday=contr.sum)),
type=3)
TukeyHSD(anova_t3_tot)
maneuver_freq_table <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(npz_dep, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_table[2:3], simulate.p.value = TRUE)
# by network
maneuver_freq_network <- all_ves_long |>
mutate(npz_dep = paste0(npz_id, Dep_ID)) |>
filter(Ves_behav == "Total_inside" | Ves_behav == "Inside_maneuver") |>
group_by(network, Ves_behav) |>
summarise(total = sum(Ves_counts)) |>
pivot_wider(names_from = Ves_behav,
values_from = total)|>
mutate(prop_inside = Inside_maneuver/Total_inside)
fisher.test(maneuver_freq_network[2:3])
View(maneuver_freq_table)
wkly_mean_adj_tot <- wkly_mean_adj_tot |>
mutate(npz_dep = as_factor(paste0(npz_id, Dep_ID)))
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
# deployment*Weekday
week_aov_int <- aov(tot_wkdy_adj ~ npz_dep*Weekday,
data = wkly_mean_adj_tot)
week_aov
week_aov_int
summary(week_aov)
summary(week_aov_int)
tukey_week <- tidy(TukeyHSD(week_aov_int)) |>
filter(adj.p.value <= 0.10)
tukey_week
View(tukey_week)
tukey_week <- tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
# deployment + Weekday
week_aov <- aov(tot_wkdy_adj ~ npz_dep + Weekday,
data = wkly_mean_adj_tot)
summary(week_aov)
tidy(TukeyHSD(week_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_ins_aov)) |>
filter(adj.p.value <= 0.10)
tukey_week_man <- tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
tidy(TukeyHSD(week_man_aov)) |>
filter(adj.p.value <= 0.10)
